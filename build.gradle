plugins {
    id "java"
    id "com.gradleup.shadow" version "8.3.0"
}

group = "com.github.kaspiandev"
version = "1"

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "minebench-repo"
        url = "https://repo.minebench.de/"
    }
    maven {
        name = "sk89q-repo"
        url = "https://maven.enginehub.org/repo/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = "placeholderapi-repo"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT"

    // Soft dependencies
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.9"
    compileOnly "com.github.MilkBowl:Vault:1.7.3"
    compileOnly "me.clip:placeholderapi:2.11.6"
    compileOnly "com.github.KaspianDev:POBox:8ecf325dfa"

    // Shaded, hard dependencies
    compileOnly "dev.dejvokep:boosted-yaml:1.3.5"
    implementation "de.themoep:minedown:1.7.1-SNAPSHOT"
    implementation "com.zaxxer:HikariCP:5.1.0"
}

shadowJar {
    setArchiveClassifier(null)

    relocate "de.themoep.minedown", "com.github.kaspiandev.fishybusiness.minedown"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

tasks.build.dependsOn(shadowJar)
